name: Deploy to TestFlight

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
orbs:
  android: circleci/android@1.0.3
  flutter: circleci/flutter@2.0.0

commands:
  custom_install_sdk:
    description: |
      Install Flutter SDK and Fastlane without doctor
    parameters:
      install-location:
        default: ~/usr/development
        description: Install path for the Flutter and Fastlane binaries.
        type: string
      version:
        default: 3.16.0
        description: The target version for the Flutter SDK.
        type: string
    steps:
      - restore_cache:
          keys:
            - flutter-<<parameters.version>>-{{ arch }}

      - run:
          name: Install Flutter SDK if it does not exist
          command: |
            INSTALL_LOCATION=$(eval "echo $ORB_EVAL_INSTALL_LOCATION")

            if [ ! -d "$INSTALL_LOCATION/flutter" ]; then
              mkdir -p "$INSTALL_LOCATION"
              if [ "$(uname)" == 'Darwin' ]; then
                curl -o flutter_sdk.zip https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_$ORB_VAL_FLUTTER_SDK_VERSION-stable.zip
                unzip -qq flutter_sdk.zip -d "$INSTALL_LOCATION"
                rm flutter_sdk.zip
              elif uname -a | grep -q "Linux" ; then
                curl -o flutter_sdk.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_$ORB_VAL_FLUTTER_SDK_VERSION-stable.tar.xz
                tar xf flutter_sdk.tar.xz -C "$INSTALL_LOCATION"
                rm -f flutter_sdk.tar.xz
              else
                echo "This platform ($(uname -a)) is not supported."
                exit 1
              fi
            fi

            echo "export PATH=$INSTALL_LOCATION/flutter/bin:\$PATH" >> "$BASH_ENV"

            # shellcheck source=/dev/null
            source "$BASH_ENV"
            which flutter

          environment:
            ORB_EVAL_INSTALL_LOCATION: <<parameters.install-location>>
            ORB_VAL_FLUTTER_SDK_VERSION: <<parameters.version>>

      - save_cache:
          key: flutter-<<parameters.version>>-{{ arch }}
          paths:
            - <<parameters.install-location>>


    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.0.0' # Use the version of Flutter you are using

      - name: Install Dependencies
        run: flutter pub get

      - name: Build iOS App
        run: flutter build ios --release

  deploy:
    runs-on: macos-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Fastlane
        run: |
          bundle install
          bundle exec fastlane init

      - name: Deploy to TestFlight
        run: bundle exec fastlane deploy_to_testflight
